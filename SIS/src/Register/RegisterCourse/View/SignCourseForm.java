/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Register.RegisterCourse.View;

import Course.Control.CourseController;
import Course.Model.Course;
import Register.RegisterCourse.Control.SignCourseController;
import Student.Model.Student;
import Student.View.MainPage;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 * This is view for actor Student to registration Course in a program;
 * @author haidt
 * 
 */
public class SignCourseForm extends javax.swing.JFrame {
    private final MainPage mainPageInstance;
    private final Student student;
    private List<Course> listSignCourses;
    /**
     * Creates new form SignCourseForm
     * <p>
     * This method create all components for the view SignCourseForm, and initialization all before information of
     * all the course which student signed before.
     * @param mainPage the view MainPage user had login
     * @param student object student 
     */
    public SignCourseForm(MainPage mainPage,Student student) {
        initComponents();
        this.mainPageInstance=mainPage;
        this.student=student;
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.initialization();
    } 

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHeader = new javax.swing.JPanel();
        jLabelHeaderLabel = new javax.swing.JLabel();
        jLabelHeaderTitle = new javax.swing.JLabel();
        jPanelContent = new javax.swing.JPanel();
        jLabelInputCourseId = new javax.swing.JLabel();
        jScrollPaneSignCourse = new javax.swing.JScrollPane();
        jTableSignCourse = new javax.swing.JTable();
        jTextFieldInputCourseId = new javax.swing.JTextField();
        jButtonSignCourse = new javax.swing.JButton();
        jButtonSendRequestSignCourse = new javax.swing.JButton();
        jComboBoxTerm = new javax.swing.JComboBox<>();
        jLabelTerm = new javax.swing.JLabel();
        jLabelAlert = new javax.swing.JLabel();
        jLabelSumCredit = new javax.swing.JLabel();
        jLabelNotification = new javax.swing.JLabel();
        jLabelCreditContent = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanelHeader.setBackground(new java.awt.Color(0, 51, 255));

        jLabelHeaderLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelHeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHeaderLabel.setText("Đăng ký học tập");

        jLabelHeaderTitle.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelHeaderTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHeaderTitle.setText("Đăng ký học phần");

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelHeaderTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelHeaderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelHeaderTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
        );

        jLabelInputCourseId.setText("Nhập mã học phần");

        jTableSignCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã học phần", "Tên học phần", "Trạng thái đăng ký", "Xóa đăng ký", "Số tín"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPaneSignCourse.setViewportView(jTableSignCourse);

        jButtonSignCourse.setText("Thêm học phần");
        jButtonSignCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSignCourseMouseClicked(evt);
            }
        });

        jButtonSendRequestSignCourse.setText("Gửi đăng ký");
        jButtonSendRequestSignCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSendRequestSignCourseMouseClicked(evt);
            }
        });

        jComboBoxTerm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTermItemStateChanged(evt);
            }
        });

        jLabelTerm.setText("Kỳ học");

        jLabelAlert.setForeground(new java.awt.Color(255, 0, 51));

        jLabelCreditContent.setText("Tổng số tín chỉ:");

        javax.swing.GroupLayout jPanelContentLayout = new javax.swing.GroupLayout(jPanelContent);
        jPanelContent.setLayout(jPanelContentLayout);
        jPanelContentLayout.setHorizontalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContentLayout.createSequentialGroup()
                .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContentLayout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jButtonSendRequestSignCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelContentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneSignCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                            .addGroup(jPanelContentLayout.createSequentialGroup()
                                .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelInputCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelContentLayout.createSequentialGroup()
                                        .addComponent(jComboBoxTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabelAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelContentLayout.createSequentialGroup()
                                        .addComponent(jTextFieldInputCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonSignCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelContentLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelCreditContent, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelSumCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanelContentLayout.setVerticalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContentLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelInputCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldInputCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSignCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPaneSignCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelSumCredit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelCreditContent, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSendRequestSignCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * This method call back the MainPage view
     * @param evt event close the view SignCourseForm
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.mainPageInstance.setEnabled(true);
        this.mainPageInstance.setVisible(true);
    }//GEN-LAST:event_formWindowClosing
    /**
     * This method check and add a new course to the table sign course
     * when student input a course and click button "Thêm học phần"
     * @param evt event sign Course Button Clicked
     */
    private void jButtonSignCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSignCourseMouseClicked
        // TODO add your handling code here:
        SignCourseController signCourseController= new SignCourseController();
        CourseController courseController= new CourseController();
        String courseId=jTextFieldInputCourseId.getText().toUpperCase();
        if("".equals(courseId)){           
            JOptionPane.showMessageDialog(this,"Bạn cần nhập mã học phần");
        }
        else if (signCourseController.checkSignCourseCondition()){
            List<Course> listLearnedCourse= signCourseController.getLearnedCourse(student.getStudentID());
            Course signCourse= courseController.getCourseById(courseId);
            if(signCourse==null){
                JOptionPane.showMessageDialog(this,"Mã học phần không tồn tại");
            }
            else{
                switch(signCourseController.checkSignCondition(listLearnedCourse, signCourse,Integer.parseInt(jLabelSumCredit.getText()))){
                    case 0:{
                        JOptionPane.showMessageDialog(this,"Bạn thiếu học phần điều kiện");
                        break;
                    }
                    case 1:{
                        for(int i=0;i<jTableSignCourse.getRowCount();i++){
                            if(signCourse.getCourseID().equals(jTableSignCourse.getValueAt(i,0).toString())){
                                JOptionPane.showMessageDialog(this,"Bạn đã thêm học phần này");
                                return;
                            }
                        }
                        DefaultTableModel model = (DefaultTableModel) jTableSignCourse.getModel();
                        Object row[] = new Object[5];
                        row[0]= signCourse.getCourseID();
                        row[1]= signCourse.getCourseName();
                        row[2]= "Đã thêm";
                        row[3]= false;
                        row[4]=signCourse.getCredit();
                        jLabelSumCredit.setText(String.valueOf(Integer.parseInt(jLabelSumCredit.getText())+signCourse.getCredit()));
                        model.addRow(row);
                        break;
                    }
                    case 2:{
                        JOptionPane.showMessageDialog(this,"Bạn đã học môn này");
                        break;
                    }
                    case 3:{
                        JOptionPane.showMessageDialog(this,"Bạn đã quá tín chỉ");
                        break;
                    }
                }
                    
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Thời gian đăng ký chưa tới hoặc đã hết ");
        }
    }//GEN-LAST:event_jButtonSignCourseMouseClicked
    /**
     * This method check and send request add and delete all the course checked add or delete on the sign table to DB on server 
     * @param evt event send request sign course have add to the table sign
     */
    private void jButtonSendRequestSignCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSendRequestSignCourseMouseClicked
        // TODO add your handling code here:                
        List<Course> listAddCourse= new ArrayList<>();
        List<Course> listDeleteCourse= new ArrayList<>();
        SignCourseController signCourseController= new SignCourseController();
        if(jTableSignCourse.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"Bạn chưa thêm học phần nào");
        }
        else if(!checkChangeRequestSignCourse()){
            JOptionPane.showMessageDialog(this,"Yêu cầu đăng ký không có thay đổi");
        }
        else{
            for(int i=0;i<jTableSignCourse.getRowCount();i++){
                Course course= new Course();
                course.setCourseID((String)jTableSignCourse.getValueAt(i,0));
                if(!(boolean)jTableSignCourse.getValueAt(i,3)&&jTableSignCourse.getValueAt(i,2).equals("Đã thêm"))
                    listAddCourse.add(course);
                else if((boolean)jTableSignCourse.getValueAt(i,3))
                    listDeleteCourse.add(course);
            }
            int feedback=signCourseController.sendRequestSignCourse(jComboBoxTerm.getSelectedItem().toString(),listAddCourse, listDeleteCourse, this.student.getStudentID());
            switch (feedback){
                case 0:{
                    this.alertSucessSignCourse(listAddCourse,listDeleteCourse);
                    break;
                }
                default:{
                    this.alertFailSignCourse();
                    break;
                }
            }
        }
        updateJTableSignCourse();
    }//GEN-LAST:event_jButtonSendRequestSignCourseMouseClicked
    /**
     * This method check the condition to sign in the new term have selected
     * and update new information about sign course in the new term have selected
     * @param evt event select new term to sign
     */
    private void jComboBoxTermItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTermItemStateChanged
        // TODO add your handling code here:
         if(new SignCourseController().checkTermSignCourse(jComboBoxTerm.getSelectedItem().toString())){
            jButtonSignCourse.setVisible(true);
            jButtonSendRequestSignCourse.setVisible(true);
            jLabelAlert.setText("");
        }
        else{
            jButtonSignCourse.setVisible(false);
            jButtonSendRequestSignCourse.setVisible(false);
            jLabelAlert.setText("Chưa đến thời gian đăng ký");
            ((DefaultTableModel)this.jTableSignCourse.getModel()).setNumRows(0); 
        }
         updateJTableSignCourse();
    }//GEN-LAST:event_jComboBoxTermItemStateChanged
    /**
     * This method set all sign course information in which term
     */
    public void initialization(){   
        int dateStart=student.getDateStart().getYear()+1900;
        for(int i=0;i<10;i++){
            jComboBoxTerm.addItem(String.valueOf(dateStart+String.valueOf(i%2+1)));
            if(i%2==1)
                dateStart+=1;
        }
        if(new SignCourseController().checkTermSignCourse(jComboBoxTerm.getSelectedItem().toString())){
            jButtonSignCourse.setVisible(true);
            jButtonSendRequestSignCourse.setVisible(true);
            jLabelAlert.setText("");
        }
        else{
            jButtonSignCourse.setVisible(false);
            jButtonSendRequestSignCourse.setVisible(false);
            jLabelAlert.setText("Chưa đến thời gian đăng ký");
            ((DefaultTableModel)this.jTableSignCourse.getModel()).setNumRows(0);
        }
        updateJTableSignCourse();
    }
    /**
     * This method alert to the user about sign course success and update new information about new course to the
     * sign course table
     * @param listAddCourse list course not check delete at the table sign course
     * @param listDeleteCourse list course check delete at the table sign course
     */
    public void alertSucessSignCourse(List<Course> listAddCourse,List<Course> listDeleteCourse){
        for(Course iC: listAddCourse){
            for(int i=0;i<jTableSignCourse.getRowCount();i++){
                if(iC.getCourseID().equals(jTableSignCourse.getValueAt(i,0).toString()))
                    jTableSignCourse.setValueAt("Thành công", i, 2);
            }
        }
        for(Course iC: listDeleteCourse){
            for(int i=0;i<jTableSignCourse.getRowCount();i++){
                if(iC.getCourseID().equals(jTableSignCourse.getValueAt(i,0).toString()))
                    ((DefaultTableModel)this.jTableSignCourse.getModel()).removeRow(i);
            }
        }
        JOptionPane.showMessageDialog(this,"Yêu cầu được gửi thành công");
    }
    /**
     * This method alert to the user about sign course fail
     */
    public void alertFailSignCourse(){
        JOptionPane.showMessageDialog(this,"Đã xảy ra lỗi khi gửi yêu cầu");
    }
    /**
     * This method check if student have change the request in the sign table
     * like when student add new course or delete a course
     * @return true if the request table have change 
     */
    public boolean checkChangeRequestSignCourse(){
        for (int i=0;i<jTableSignCourse.getRowCount();i++){
            if((!"Thành công".equals(jTableSignCourse.getValueAt(i,2).toString()))||((boolean)jTableSignCourse.getValueAt(i,3)==true))
                return true;
        }
        return false;
    }
    /**
     * This method update new information about sign course to the sign course table
     */
    public void updateJTableSignCourse(){
        int sumCredit=0;
        ((DefaultTableModel)this.jTableSignCourse.getModel()).setNumRows(0);    
        SignCourseController signCourseController = new SignCourseController();
        listSignCourses=signCourseController.getAllSignCourseDetailByStudentID(student.getStudentID(),jComboBoxTerm.getSelectedItem().toString());
        for(Course sCourse: listSignCourses){
            DefaultTableModel model = (DefaultTableModel) jTableSignCourse.getModel();
            Object row[] = new Object[5];
            row[0]= sCourse.getCourseID();
            row[1]= sCourse.getCourseName();
            row[2]= "Thành công";
            row[3]= false;
            row[4]= sCourse.getCredit();
            model.addRow(row);
            sumCredit+=sCourse.getCredit();
        }
        jLabelSumCredit.setText(String.valueOf(sumCredit));
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSendRequestSignCourse;
    private javax.swing.JButton jButtonSignCourse;
    private javax.swing.JComboBox<String> jComboBoxTerm;
    private javax.swing.JLabel jLabelAlert;
    private javax.swing.JLabel jLabelCreditContent;
    private javax.swing.JLabel jLabelHeaderLabel;
    private javax.swing.JLabel jLabelHeaderTitle;
    private javax.swing.JLabel jLabelInputCourseId;
    private javax.swing.JLabel jLabelNotification;
    private javax.swing.JLabel jLabelSumCredit;
    private javax.swing.JLabel jLabelTerm;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JScrollPane jScrollPaneSignCourse;
    private javax.swing.JTable jTableSignCourse;
    private javax.swing.JTextField jTextFieldInputCourseId;
    // End of variables declaration//GEN-END:variables
}
